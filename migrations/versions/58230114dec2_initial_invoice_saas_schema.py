"""Initial invoice SaaS schema

Revision ID: 58230114dec2
Revises: 
Create Date: 2025-07-14 17:25:11.178810

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '58230114dec2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tenants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.String(length=100), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=False),
    sa.Column('nit', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('plan', sa.String(length=50), nullable=True),
    sa.Column('invoices_processed_month', sa.Integer(), nullable=True),
    sa.Column('max_invoices_month', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tenants_tenant_id'), 'tenants', ['tenant_id'], unique=True)
    op.create_table('processed_invoices',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.String(length=100), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('s3_key', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('confidence_score', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('processing_time_seconds', sa.Numeric(precision=10, scale=3), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('upload_timestamp', sa.DateTime(), nullable=True),
    sa.Column('processing_timestamp', sa.DateTime(), nullable=True),
    sa.Column('completion_timestamp', sa.DateTime(), nullable=True),
    sa.Column('textract_job_id', sa.String(length=255), nullable=True),
    sa.Column('textract_raw_response', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('invoice_number', sa.String(length=100), nullable=True),
    sa.Column('invoice_type', sa.String(length=50), nullable=True),
    sa.Column('issue_date', sa.Date(), nullable=True),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('supplier_name', sa.String(length=255), nullable=True),
    sa.Column('supplier_nit', sa.String(length=50), nullable=True),
    sa.Column('supplier_address', sa.Text(), nullable=True),
    sa.Column('supplier_city', sa.String(length=100), nullable=True),
    sa.Column('supplier_department', sa.String(length=100), nullable=True),
    sa.Column('supplier_phone', sa.String(length=50), nullable=True),
    sa.Column('customer_name', sa.String(length=255), nullable=True),
    sa.Column('customer_id', sa.String(length=50), nullable=True),
    sa.Column('customer_address', sa.Text(), nullable=True),
    sa.Column('customer_city', sa.String(length=100), nullable=True),
    sa.Column('customer_department', sa.String(length=100), nullable=True),
    sa.Column('customer_phone', sa.String(length=50), nullable=True),
    sa.Column('salesperson', sa.String(length=255), nullable=True),
    sa.Column('elaborated_by', sa.String(length=255), nullable=True),
    sa.Column('subtotal', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('iva_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('iva_amount', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('retenciones', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('total_items', sa.Integer(), nullable=True),
    sa.Column('payment_method', sa.String(length=100), nullable=True),
    sa.Column('credit_days', sa.Integer(), nullable=True),
    sa.Column('discount_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('observations', sa.Text(), nullable=True),
    sa.Column('authorization', sa.Text(), nullable=True),
    sa.Column('cufe', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.tenant_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_supplier_tenant', 'processed_invoices', ['supplier_nit', 'tenant_id'], unique=False)
    op.create_index('idx_tenant_date', 'processed_invoices', ['tenant_id', 'issue_date'], unique=False)
    op.create_index('idx_tenant_status', 'processed_invoices', ['tenant_id', 'status'], unique=False)
    op.create_index(op.f('ix_processed_invoices_customer_name'), 'processed_invoices', ['customer_name'], unique=False)
    op.create_index(op.f('ix_processed_invoices_invoice_number'), 'processed_invoices', ['invoice_number'], unique=False)
    op.create_index(op.f('ix_processed_invoices_issue_date'), 'processed_invoices', ['issue_date'], unique=False)
    op.create_index(op.f('ix_processed_invoices_status'), 'processed_invoices', ['status'], unique=False)
    op.create_index(op.f('ix_processed_invoices_supplier_nit'), 'processed_invoices', ['supplier_nit'], unique=False)
    op.create_index(op.f('ix_processed_invoices_tenant_id'), 'processed_invoices', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_processed_invoices_total_amount'), 'processed_invoices', ['total_amount'], unique=False)
    op.create_index(op.f('ix_processed_invoices_upload_timestamp'), 'processed_invoices', ['upload_timestamp'], unique=False)
    op.create_table('products',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.String(length=100), nullable=False),
    sa.Column('product_code', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('reference', sa.String(length=255), nullable=True),
    sa.Column('unit_measure', sa.String(length=50), nullable=True),
    sa.Column('current_stock', sa.Numeric(precision=15, scale=4), nullable=True),
    sa.Column('min_stock', sa.Numeric(precision=15, scale=4), nullable=True),
    sa.Column('max_stock', sa.Numeric(precision=15, scale=4), nullable=True),
    sa.Column('total_purchased', sa.Numeric(precision=15, scale=4), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('last_purchase_date', sa.Date(), nullable=True),
    sa.Column('last_purchase_price', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.tenant_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_product_code_tenant', 'products', ['product_code', 'tenant_id'], unique=False)
    op.create_index(op.f('ix_products_product_code'), 'products', ['product_code'], unique=False)
    op.create_index(op.f('ix_products_tenant_id'), 'products', ['tenant_id'], unique=False)
    op.create_table('suppliers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.String(length=100), nullable=False),
    sa.Column('nit', sa.String(length=50), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('total_invoices', sa.Integer(), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('last_invoice_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.tenant_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_supplier_nit_tenant', 'suppliers', ['nit', 'tenant_id'], unique=False)
    op.create_index(op.f('ix_suppliers_tenant_id'), 'suppliers', ['tenant_id'], unique=False)
    op.create_table('billing_records',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.String(length=100), nullable=False),
    sa.Column('invoice_id', sa.UUID(), nullable=True),
    sa.Column('processing_date', sa.DateTime(), nullable=True),
    sa.Column('cost_cop', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('invoice_type', sa.String(length=50), nullable=True),
    sa.Column('pages_processed', sa.Integer(), nullable=True),
    sa.Column('confidence_score', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['processed_invoices.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.tenant_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_billing_records_processing_date'), 'billing_records', ['processing_date'], unique=False)
    op.create_index(op.f('ix_billing_records_tenant_id'), 'billing_records', ['tenant_id'], unique=False)
    op.create_table('invoice_line_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('invoice_id', sa.UUID(), nullable=False),
    sa.Column('line_number', sa.Integer(), nullable=True),
    sa.Column('product_code', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('reference', sa.String(length=255), nullable=True),
    sa.Column('unit_measure', sa.String(length=50), nullable=True),
    sa.Column('box_number', sa.String(length=50), nullable=True),
    sa.Column('quantity', sa.Numeric(precision=15, scale=4), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('subtotal', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['invoice_id'], ['processed_invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_product_code_invoice', 'invoice_line_items', ['product_code', 'invoice_id'], unique=False)
    op.create_index(op.f('ix_invoice_line_items_invoice_id'), 'invoice_line_items', ['invoice_id'], unique=False)
    op.create_index(op.f('ix_invoice_line_items_product_code'), 'invoice_line_items', ['product_code'], unique=False)
    op.drop_index('idx_processing_results_document_id', table_name='processing_results')
    op.drop_index('idx_processing_results_textract_data', table_name='processing_results', postgresql_using='gin')
    op.drop_table('processing_results')
    op.drop_index('idx_documents_s3_key', table_name='documents')
    op.drop_index('idx_documents_status', table_name='documents')
    op.drop_index('idx_documents_upload_timestamp', table_name='documents')
    op.drop_table('documents')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('documents',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('original_filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('file_size', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('content_type', sa.VARCHAR(length=100), server_default=sa.text("'application/pdf'::character varying"), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), server_default=sa.text("'uploaded'::character varying"), autoincrement=False, nullable=False),
    sa.Column('s3_key', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('upload_timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('processing_started', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('processing_completed', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='documents_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('idx_documents_upload_timestamp', 'documents', ['upload_timestamp'], unique=False)
    op.create_index('idx_documents_status', 'documents', ['status'], unique=False)
    op.create_index('idx_documents_s3_key', 'documents', ['s3_key'], unique=False)
    op.create_table('processing_results',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('document_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('total_pages', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('extracted_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('textract_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('extracted_tables', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('extracted_forms', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('extracted_signatures', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('confidence_scores', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('processing_time_seconds', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('textract_job_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], name='processing_results_document_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='processing_results_pkey')
    )
    op.create_index('idx_processing_results_textract_data', 'processing_results', ['textract_data'], unique=False, postgresql_using='gin')
    op.create_index('idx_processing_results_document_id', 'processing_results', ['document_id'], unique=False)
    op.drop_index(op.f('ix_invoice_line_items_product_code'), table_name='invoice_line_items')
    op.drop_index(op.f('ix_invoice_line_items_invoice_id'), table_name='invoice_line_items')
    op.drop_index('idx_product_code_invoice', table_name='invoice_line_items')
    op.drop_table('invoice_line_items')
    op.drop_index(op.f('ix_billing_records_tenant_id'), table_name='billing_records')
    op.drop_index(op.f('ix_billing_records_processing_date'), table_name='billing_records')
    op.drop_table('billing_records')
    op.drop_index(op.f('ix_suppliers_tenant_id'), table_name='suppliers')
    op.drop_index('idx_supplier_nit_tenant', table_name='suppliers')
    op.drop_table('suppliers')
    op.drop_index(op.f('ix_products_tenant_id'), table_name='products')
    op.drop_index(op.f('ix_products_product_code'), table_name='products')
    op.drop_index('idx_product_code_tenant', table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_processed_invoices_upload_timestamp'), table_name='processed_invoices')
    op.drop_index(op.f('ix_processed_invoices_total_amount'), table_name='processed_invoices')
    op.drop_index(op.f('ix_processed_invoices_tenant_id'), table_name='processed_invoices')
    op.drop_index(op.f('ix_processed_invoices_supplier_nit'), table_name='processed_invoices')
    op.drop_index(op.f('ix_processed_invoices_status'), table_name='processed_invoices')
    op.drop_index(op.f('ix_processed_invoices_issue_date'), table_name='processed_invoices')
    op.drop_index(op.f('ix_processed_invoices_invoice_number'), table_name='processed_invoices')
    op.drop_index(op.f('ix_processed_invoices_customer_name'), table_name='processed_invoices')
    op.drop_index('idx_tenant_status', table_name='processed_invoices')
    op.drop_index('idx_tenant_date', table_name='processed_invoices')
    op.drop_index('idx_supplier_tenant', table_name='processed_invoices')
    op.drop_table('processed_invoices')
    op.drop_index(op.f('ix_tenants_tenant_id'), table_name='tenants')
    op.drop_table('tenants')
    # ### end Alembic commands ###
